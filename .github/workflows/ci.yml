name: CI/CD Pipeline

on:
  push:
    branches: [ main, test, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint --if-present
    
    - name: Run tests
      run: npm test --if-present
      env:
        NODE_ENV: test
    
    - name: Run local test script
      run: node test-local.js
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        FOGO_RPC_URL: ${{ secrets.FOGO_RPC_URL }}
        BOT_WALLET_PRIVATE_KEY: ${{ secrets.BOT_WALLET_PRIVATE_KEY }}
        TARGET_CHANNEL_ID: ${{ secrets.TARGET_CHANNEL_ID }}
        DATABASE_PATH: ./test_fogo_requests.db

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build Docker image
      run: docker build -t fogo-faucet-bot .
    
    - name: Test Docker image
      run: |
        docker run --rm \
          -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} \
          -e FOGO_RPC_URL=${{ secrets.FOGO_RPC_URL }} \
          -e BOT_WALLET_PRIVATE_KEY=${{ secrets.BOT_WALLET_PRIVATE_KEY }} \
          -e TARGET_CHANNEL_ID=${{ secrets.TARGET_CHANNEL_ID }} \
          -e DATABASE_PATH=./fogo_requests.db \
          fogo-faucet-bot node test-local.js

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/test'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here
        # Example: docker-compose -f docker-compose.dev.yml up -d
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        FOGO_RPC_URL: ${{ secrets.FOGO_RPC_URL }}
        BOT_WALLET_PRIVATE_KEY: ${{ secrets.BOT_WALLET_PRIVATE_KEY }}
        TARGET_CHANNEL_ID: ${{ secrets.TARGET_CHANNEL_ID }}
        DATABASE_PATH: ./fogo_requests.db

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
        # Example: docker-compose -f docker-compose.prod.yml up -d
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        FOGO_RPC_URL: ${{ secrets.FOGO_RPC_URL }}
        BOT_WALLET_PRIVATE_KEY: ${{ secrets.BOT_WALLET_PRIVATE_KEY }}
        TARGET_CHANNEL_ID: ${{ secrets.TARGET_CHANNEL_ID }}
        DATABASE_PATH: ./fogo_requests.db 